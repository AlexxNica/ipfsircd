
                     ngIRCd - Next Generation IRC Server

                      (c)2001,2002 by Alexander Barton,
                    alex@barton.de, http://www.barton.de/

                  ngIRCd ist freie Software und steht unter
                       der GNU General Public License.

                         -- INSTALL / Installation --


ngIRCd ist fuer UNIXoide-Systeme konzipiert. Dieser Text beschreibt den
"Standardfall": ein UNIX bzw. UNIX-aehnliches System, das von GNU automake
und GNU autoconf ("configure") unterstuetzt wird.


I. Voraussetzungen
~~~~~~~~~~~~~~~~~~

ngIRCd benoetigt "Alex' Portability Headers" (portab.h). Diese koennen von
der Homepage heruntergeladen werden:

<http://arthur.ath.cx/~alex/ngircd/#download>

Vor dem configure-Lauf des ngIRCd muessen dies Header auf dem System in-
stalliert sein, anonsten bricht configure ab.


II. Quick Start
~~~~~~~~~~~~~~~

In der Regel sind folgende Schritte ausreichend:

   1) ./autogen.sh	[nur erforderlich, wenn ueber CVS bezogen]
   2) ./configure
   3) make


zu 1) autogen.sh:

Der erste Schritt, autogen.sh, ist nur notwendig, wenn das configure-Script
noch nicht vorhanden ist. Dies ist nie bei offiziellen ("stabilen") Versionen
in tar.gz-Archiven der Fall, jedoch nie, wenn der Source-Code ueber CVS
bezogen wurde.

Dieser Absatz ist also eigentlich ausschliesslich fuer Entwickler interessant.

autogen.sh erzeugt die fuer das configure-Script notwendigen Makefile.in's
sowie das configure-Script selber und weitere fuer den make-Lauf erforderliche
Dateien. Dazu wird sowohl GNU automake als auch GNU autoconf (in aktuellen
Versionen!) benoetigt.

(nochmal: "Endanwender" mussen diesen Schritt i.d.R. nicht ausfuehren!)


zu 2) ./configure:

Mit dem configure-Script wird ngIRCd, wie GNU Software meistens, an das
lokale System angepasst und die erforderlichen Makefile's erzeugt.

Im Optimalfall sollte configure alle benoetigten Libraries, Header etc. selber
erkennen und entsprechend reagieren. Sollte dies einmal nicht der Fall sein,
so zeigt "./configure --help" moegliche Optionen.


zu 3) make:

Der make-Befehl bearbeitet die vom configure-Script erzeugten Makefile's und
uebersetzt die comBase-Library und die Testprogramme.


III. Nuetzliche make-Targets
~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Die vom configure-Script erzeugten Makefile's enthalten immer die folgenden
nuetzlichen Targets:

 - clean: alle Erzeugnisse des Compilers/Linkers loeschen.
   Naechster Schritt: -> make

 - distclean: zusaetzliche alle Makefile's loeschen.
   Naechster Schritt: -> ./configure

 - maintainer-clean: alle automat. erzeugten Dateien loeschen.
   Naechster Schritt: -> ./autogen.sh

