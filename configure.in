#
# ngIRCd -- The Next Generation IRC Daemon
# Copyright (c)2001,2002 by Alexander Barton (alex@barton.de)
#
# Dieses Programm ist freie Software. Sie koennen es unter den Bedingungen
# der GNU General Public License (GPL), wie von der Free Software Foundation
# herausgegeben, weitergeben und/oder modifizieren, entweder unter Version 2
# der Lizenz oder (wenn Sie es wuenschen) jeder spaeteren Version.
# Naehere Informationen entnehmen Sie bitter der Datei COPYING. Eine Liste
# der an ngIRCd beteiligten Autoren finden Sie in der Datei AUTHORS.
#
# $Id: configure.in,v 1.17 2002/01/05 15:53:20 alex Exp $
#
# $Log: configure.in,v $
# Revision 1.17  2002/01/05 15:53:20  alex
# - Test auf Header "arpa/inet.h" und Funktion inet_aton() hinzugefuegt (BeOS).
#
# Revision 1.16  2002/01/02 13:41:36  alex
# - CFLAGS wird nur noch gesetzt, wenn der GCC verwendet wird.
#
# Revision 1.15  2002/01/02 02:52:09  alex
# - Copyright-Texte angepasst ;-)
#
# Revision 1.14  2001/12/31 16:11:13  alex
# - CVS-Version auf "0.0.2-pre" angehoben.
#
# Revision 1.13  2001/12/31 16:02:30  alex
# - Version 0.0.1
#
# Revision 1.12  2001/12/31 02:21:00  alex
# - "doc"-Unterverzeichnis aufgenommen.
#
# Revision 1.11  2001/12/29 03:04:06  alex
# - neue configure-Option "--enable-strict-rfc".
#
# Revision 1.10  2001/12/27 16:25:36  alex
# - neue configure-Option "--with-portab=DIR".
#
# Revision 1.9  2001/12/27 02:08:38  alex
# - da fehlte an zwei Stellen ein AC_MSG_ERROR ... ups!
#
# Revision 1.8  2001/12/27 01:44:49  alex
# - die Verwendung von syslog kann nun abgeschaltet werden.
#
# Revision 1.7  2001/12/27 00:37:07  alex
# - Erkennung der "portab header" geaendert, CFLAGS werden nun anders gesetzt.
#
# Revision 1.6  2001/12/25 22:01:47  alex
# - neue configure-Option "--enable-sniffer".
#
# Revision 1.5  2001/12/21 23:54:26  alex
# - zusaetzliche Debug-Ausgaben koennen eingeschaltet werden.
#
# Revision 1.4  2001/12/12 17:21:58  alex
# - Projektdatei fuer den Mac OS X Project Builder erstellt.
#
# Revision 1.3  2001/12/12 01:58:53  alex
# - Test auf socklen_t verbessert.
#
# Revision 1.2  2001/12/11 22:04:21  alex
# - Test auf stdint.h (HAVE_STDINT_H) hinzugefuegt.
#
# Revision 1.1.1.1  2001/12/11 21:53:04  alex
# Imported sources to CVS.
#

# -- Initialisierung --

AC_INIT
AC_CONFIG_SRCDIR(src/ngircd/ngircd.c)
AM_INIT_AUTOMAKE(ngircd,0.0.2-pre)
AM_CONFIG_HEADER(src/config.h)

# -- Variablen --

# -- C Compiler --

AC_PROG_CC
AC_LANG_C

# -- Hilfsprogramme --

AC_PROG_AWK
AC_PROG_INSTALL
AC_PROG_LN_S
AC_PROG_MAKE_SET
AC_PROG_RANLIB

# -- Header --

AC_HEADER_STDC

AC_HEADER_TIME

AC_ARG_WITH(portab,
	[  --with-portab=DIR       search the "portab headers" in DIR],
	[	if test "x$withval" != "xno"; then
			CFLAGS="$CFLAGS -I${withval}"
			if test -f ${withval}/portab.h; then
				AC_MSG_RESULT([searching "portab headers" in ${withval}...])
			else
				AC_MSG_ERROR([${withval}/portab.h not found!])
			fi
		else
			AC_MSG_ERROR([Can't disable Alex \"portability headers\"!])
		fi
	],
	[	AC_CHECK_HEADER(portab.h,[
			AC_CHECK_HEADER(imp.h,,AC_MSG_ERROR([Alex \"portability headers\" (portab.h an friends) not found!]))
			AC_CHECK_HEADER(exp.h,,AC_MSG_ERROR([Alex \"portability headers\" (portab.h an friends) not found!]))
		],[
			AC_CHECK_HEADER(/usr/local/include/portab.h,,AC_MSG_ERROR([Alex \"portability headers\" (portab.h an friends) not found!]))
			AC_CHECK_HEADER(/usr/local/include/imp.h,,AC_MSG_ERROR([Alex \"portability headers\" (portab.h an friends) not found!]))
			AC_CHECK_HEADER(/usr/local/include/exp.h,,AC_MSG_ERROR([Alex \"portability headers\" (portab.h an friends) not found!]))
			CFLAGS="$CFLAGS -I/usr/local/include"
		])
	]
)

AC_CHECK_HEADERS([ \
	errno.h fcntl.h netinet/in.h string.h \
	sys/socket.h sys/time.h unistd.h \
	],,AC_MSG_ERROR([required C header missing!]))

AC_CHECK_HEADERS(arpa/inet.h)

# -- Datentypen --

AC_MSG_CHECKING(whether socklen_t exists)
AC_TRY_COMPILE([
	#include <sys/socket.h>
	#include <sys/types.h>
	],[
	socklen_t a, b;
	a = 2; b = 4; a += b;
	],[
	AC_DEFINE(HAVE_socklen_t) AC_MSG_RESULT(yes)
	],[
	AC_MSG_RESULT(no)
])

# -- Funktionen --

AC_FUNC_MALLOC

AC_CHECK_FUNCS([ \
	gethostname inet_ntoa memmove memset select \
	socket strcasecmp strchr strerror strstr waitpid \
	],,AC_MSG_ERROR([required function missing!]))

AC_CHECK_FUNCS(inet_aton)

# -- Libraries --

# -- Konfigurationsoptionen --

AC_ARG_ENABLE(syslog,
	[  --disable-syslog        disable syslog (autodetected by default)],
	[	if test "$enableval" = "yes"; then
			AC_CHECK_HEADER(syslog.h,AC_DEFINE(USE_SYSLOG, 1),AC_MSG_ERROR([Can't enable syslog: syslog.h not found!]))
		else
			AC_MSG_RESULT([disabling syslog])
		fi
	],
	[	AC_CHECK_HEADER(syslog.h,AC_DEFINE(USE_SYSLOG, 1))
	]
)

AC_ARG_ENABLE(strict-rfc,
	[  --enable-strict-rfc     strict RFC conformance, may break clients],
	if test "$enableval" = "yes"; then
		AC_DEFINE(STRICT_RFC, 1)
		AC_MSG_RESULT([enabling strict RFC conformance])
	fi
)

AC_ARG_ENABLE(sniffer,
	[  --enable-sniffer        enable network traffic monitor (enables debug mode!)],
	if test "$enableval" = "yes"; then
		AC_DEFINE(SNIFFER, 1)
		AC_MSG_RESULT([enabling network traffic monitor])
		x_debug_on=yes
	fi
)

AC_ARG_ENABLE(debug,
	[  --enable-debug          show additional debug output],
	if test "$enableval" = "yes"; then x_debug_on=yes; fi
)
if test "$x_debug_on" = "yes"; then
	AC_DEFINE(DEBUG, 1)
	AC_MSG_RESULT([enabling additional debug output])
fi

# -- Variablen II --

if test "$GCC" = "yes"; then
	CFLAGS="-Wall $CFLAGS"
fi

# -- Ausgabe --

AC_OUTPUT([ \
	Makefile \
	doc/Makefile \
	MacOSX/Makefile \
	MacOSX/ngircd.pbproj/Makefile \
	src/Makefile \
	src/ngircd/Makefile \
])

# -eof-
